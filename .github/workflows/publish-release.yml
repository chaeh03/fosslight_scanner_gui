name: Release fosslight_scanner_gui

on:
  release:
    types: [published]

jobs:
    build:
        name: Build packages
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            include:
              - os: ubuntu-latest
                TARGET: ubuntu
                CMD_BUILD: >
                    yarn &&
                    yarn build &&
                    tar -czf fosslight-gui-ubuntu-setup.tar.gz -C dist/linux-unpacked .
                OUT_FILE_NAME: fosslight-gui-ubuntu-setup.tar.gz
                ASSET_MIME: application/gzip
              - os: windows-latest
                TARGET: windows
                CMD_BUILD: >
                  yarn &&
                  yarn build &&
                  move dist/your_executable.exe fosslight-gui-windows.exe
                OUT_FILE_NAME: fosslight-gui-windows.exe
                ASSET_MIME: application/octet-stream
              
              
        steps:
        - uses: actions/checkout@v3
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'
        - name: Install dependencies
          run: |
            yarn install
        - name: Build with yarn for ${{ matrix.TARGET }}
          run: ${{ matrix.CMD_BUILD }}
        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1.0.1
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
          with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: ./${{ matrix.OUT_FILE_NAME }}
            asset_name: ${{ matrix.OUT_FILE_NAME }}
            asset_content_type: ${{ matrix.ASSET_MIME }}